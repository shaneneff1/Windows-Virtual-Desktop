{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "metadata": {
                "description": "<USER ASSIGNED IDENTITY NAME>"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
            }
        },
        "rbacGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "miIDResourceID": {
            "type": "string",
            "metadata": {
                "description": "The resource ID of the Managed ID"
            }
        }
    },
    "variables": {
        "resourceName": "[concat(parameters('appName'), '-mi')]",
        "contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('resourceName')]",
            "apiVersion": "2018-11-30",
            "location": "[parameters('location')]"
        },
        {
            "apiVersion": "2018-09-01-preview",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[guid(resourceId('Microsoft.Authorization/roleAssignments/', variables('resourceName')))]",
            "properties": {
                "roleDefinitionId": "[variables('contributor')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('resourceName')), '2018-11-30').principalId]",
                "scope": "[resourceGroup().id]"
            },
            "dependsOn": [
                "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('resourceName'))]"
            ]
        }
    ],
    "outputs": {
        "identityName": {
            "type": "string",
            "value": "[variables('resourceName')]"
        }
    }
}